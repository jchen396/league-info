{"version":3,"sources":["css/rank_icons sync /^/.*$","css/rank_icons/Emblem_Bronze.png","css/rank_icons/Emblem_Challenger.png","css/rank_icons/Emblem_Diamond.png","css/rank_icons/Emblem_Gold.png","css/rank_icons/Emblem_Grandmaster.png","css/rank_icons/Emblem_Iron.png","css/rank_icons/Emblem_Master.png","css/rank_icons/Emblem_Platinum.png","css/rank_icons/Emblem_Silver.png","css/rank_icons/Emblem_null.png","components/NavBar.js","components/Champions/Cards.js","components/Champions/Champions.js","components/About/About.js","components/Players/Info.js","components/Players/Icon.js","components/Players/Results.js","components/Players/Matches.js","components/Players/Search.js","components/Players/Players.js","components/Champions/Post.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","NavBar","useState","active","setActive","classList","setClassList","useEffect","className","to","onClick","Cards","search","champions","setChampions","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","champSearch","champArray","values","champPool","champ","re","RegExp","match","key","src","alt","height","width","title","every","value","undefined","Champions","setSearch","action","onSubmit","preventDefault","spellCheck","type","onChange","target","About","style","color","Info","sumId","api","info","setInfo","catch","console","log","response","leagueTier","tier","leagueRank","toString","charAt","toLowerCase","slice","leagueDiv","rank","leagueLP","leaguePoints","leagueWins","wins","leagueLosses","losses","iconDir","require","icon","dataDisplay","Icon","champId","setData","champImage","Number","name","Results","matchIds","sumName","setMatch","temp","setTemp","main","setMain","setName","forEach","mainArray","length","matchList","game","mode","gameMode","duration","gameDuration","minutes","Math","floor","seconds","time","player","participants","getId","participantIdentities","summoner","summonerName","participantId","filter","championId","statsAccess","stats","deaths","assists","kills","outcomeColor","win","outcome","champName","nameMatch","String","Matches","accId","setChamp","dataArray","matchArray","matches","gameId","placeholder","Search","setSummoner","apiKey","process","err","sumArray","sumLevel","summonerLevel","sumIcon","profileIconId","accountId","profileDisplay","Players","inputRef","useRef","current","ref","config","Post","params","post_id","skin","setSkin","select","setSelect","infoArray","infoList","skins","num","spells","spell","cooldown","cd","costType","cost","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5f32b45.chunk.js","sourcesContent":["var map = {\n\t\"./Emblem_Bronze.png\": 59,\n\t\"./Emblem_Challenger.png\": 60,\n\t\"./Emblem_Diamond.png\": 61,\n\t\"./Emblem_Gold.png\": 62,\n\t\"./Emblem_Grandmaster.png\": 63,\n\t\"./Emblem_Iron.png\": 64,\n\t\"./Emblem_Master.png\": 65,\n\t\"./Emblem_Platinum.png\": 66,\n\t\"./Emblem_Silver.png\": 67,\n\t\"./Emblem_null.png\": 68\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;","module.exports = __webpack_public_path__ + \"static/media/Emblem_Bronze.39964f7f.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_Challenger.4aaf9754.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_Diamond.c9018327.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_Gold.19be519b.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_Grandmaster.d0d4b62f.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_Iron.1a6b4669.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_Master.4156f1c1.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_Platinum.86ac5170.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_Silver.3a4aa1a5.png\";","module.exports = __webpack_public_path__ + \"static/media/Emblem_null.12ca6a07.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function NavBar() {\r\n    const [active, setActive] = useState(false);\r\n    const [classList, setClassList] = useState(\"responsive\");\r\n    useEffect(() => {\r\n        if (active) setClassList(\"right responsive\");\r\n        else setClassList(\"right\");\r\n    }, [active]);\r\n    return (\r\n        <nav className=\"nav-wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"brand-logo\">\r\n                    <NavLink to=\"/\">LeagueInfo</NavLink>\r\n                </div>\r\n                <ul className={classList}>\r\n                    <li onClick={() => setActive(false)}>\r\n                        <NavLink to=\"/champions\">Champions</NavLink>\r\n                    </li>\r\n                    <li onClick={() => setActive(false)}>\r\n                        <NavLink to=\"/players\">Players</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <div\r\n                    className=\"hamburger\"\r\n                    onClick={() =>\r\n                        active ? setActive(false) : setActive(true)\r\n                    }\r\n                >\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","// -> Champion.js -> App.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Cards({ search }) {\r\n    const [champions, setChampions] = useState([]);\r\n    useEffect(() => {\r\n        let cancel;\r\n        // const proxy = \"https://cors-anywhere.herokuapp.com/\"; //proxy incase local server does not work\r\n        axios\r\n            .get(\r\n                `http://ddragon.leagueoflegends.com/cdn/9.19.1/data/en_US/champion.json `,\r\n                {\r\n                    //get data from league api\r\n                    cancelToken: new axios.CancelToken((c) => {\r\n                        cancel = c;\r\n                    }),\r\n                }\r\n            )\r\n            .then((res) => {\r\n                setChampions(res.data.data); //retrieve data from api\r\n            });\r\n        return () => cancel();\r\n    }, []);\r\n\r\n    const champSearch = search; // get the input value from props\r\n    const champArray = Object.values(champions); // Object ->  Array\r\n    const champPool = champSearch\r\n        ? champArray.map((champ) => {\r\n              // map through array\r\n              let re = new RegExp(champSearch, \"i\"); // assign regex values from to reg\r\n              if (champ.id.match(re)) {\r\n                  return (\r\n                      <div className=\"post card\" key={champ.key}>\r\n                          <Link to={\"/\" + champ.id}>\r\n                              <div className=\"card-content\">\r\n                                  <img\r\n                                      src={`http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg`}\r\n                                      alt=\"splash-art\"\r\n                                      height=\"200\"\r\n                                      width=\"120\"\r\n                                  />\r\n                                  <span className=\"card-title\">{champ.id}</span>\r\n                                  <p>{champ.title}</p>\r\n                              </div>\r\n                          </Link>\r\n                      </div>\r\n                  );\r\n              } else {\r\n                  return null;\r\n              }\r\n          })\r\n        : champArray.map((champ) => {\r\n              return (\r\n                  <div className=\"post card\" key={champ.key}>\r\n                      <Link to={\"/\" + champ.id}>\r\n                          <div className=\"card-content\">\r\n                              <img\r\n                                  src={`http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg`}\r\n                                  alt=\"splash-art\"\r\n                                  height=\"200\"\r\n                                  width=\"120\"\r\n                              />\r\n                              <span className=\"card-title\">{champ.id}</span>\r\n                              <p>{champ.title}</p>\r\n                          </div>\r\n                      </Link>\r\n                  </div>\r\n              );\r\n          });\r\n\r\n    const checkEmpty = (value) => {\r\n        return value === undefined;\r\n    };\r\n    if (champPool.every(checkEmpty)) {\r\n        return <div className=\"center no-results\">No results were found</div>;\r\n    }\r\n\r\n    return <div className=\"results\">{champPool}</div>;\r\n}\r\n","// -> App.js\r\nimport React, {useState} from 'react';\r\nimport Cards from './Cards';\r\n\r\nexport default function Champions() {\r\n    const [search, setSearch] = useState([]);\r\n    return(\r\n        <div className=\"container home\">\r\n            <h6 className=\"center\">Type below to search</h6>\r\n            <div className=\"form-search\">\r\n                <form action=\"\" onSubmit={e => e.preventDefault()}>\r\n                    <input className=\"center\" spellCheck=\"false\" value={search} type=\"text\" onChange={e => setSearch(e.target.value)}/>\r\n                </form>\r\n            </div>\r\n            <Cards search={search}/>\r\n        </div>          \r\n    );\r\n}","// -> About.js\r\nimport React from \"react\";\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"center\">How to Use</h2>\r\n            <h3>\r\n                This website was created using React.js. <br /> Please click the\r\n                tabs on the navigation bar to use the functions of the website.{\" \"}\r\n                <br /> The <span style={{ color: \"#ffff\" }}>Champions</span> tab\r\n                will display out all the existing champions cards and access to\r\n                details inside. <br /> The{\" \"}\r\n                <span style={{ color: \"#ffff\" }}>Players</span> tab will allow\r\n                you to use the Riot API to search up individual player ranks and\r\n                other information.\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n","// -> Search.js -> Player.js -> App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Info({ sumId, api }) {\r\n    const [info, setInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const proxy = \"https://cors-anywhere.herokuapp.com/\"; //proxy incase local server does not work\r\n        axios\r\n            .get(\r\n                `${proxy}https://na1.api.riotgames.com/lol/league/v4/entries/by-summoner/${sumId}?api_key=${api}`\r\n            )\r\n            .then((res) => {\r\n                setInfo(res.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e.response);\r\n            });\r\n    }, [sumId, api]);\r\n\r\n    // LEAGUE RANKING INFORMATION\r\n    const leagueTier = info[1] && info[1].tier;\r\n    const leagueRank = leagueTier\r\n        ? leagueTier.toString().charAt(0) +\r\n          leagueTier.toString().toLowerCase().slice(1)\r\n        : null;\r\n    const leagueDiv = info[1] && info[1].rank;\r\n    const leagueLP = info[1] && info[1].leaguePoints;\r\n    const leagueWins = info[1] && info[1].wins;\r\n    const leagueLosses = info[1] && info[1].losses;\r\n\r\n    const iconDir = require.context(\"../../css/rank_icons/\");\r\n    const icon = leagueTier\r\n        ? iconDir(`./Emblem_${leagueRank}.png`)\r\n        : iconDir(`./Emblem_null.png`);\r\n\r\n    const dataDisplay =\r\n        leagueRank !== null ? (\r\n            <div>\r\n                <div className=\"ranking\">\r\n                    <img src={icon} alt=\"rank-icon\" height=\"270\" width=\"270\" />\r\n                    <h3>{`${leagueRank} ${leagueDiv}`}</h3>\r\n                    <h4>{leagueLP} LP</h4>\r\n                </div>\r\n                <div className=\"rank-stats\">\r\n                    <h5>Wins: {leagueWins}</h5>\r\n                    <h5>Losses : {leagueLosses}</h5>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div>\r\n                <div className=\"ranking\">\r\n                    <img src={icon} alt=\"rank-icon\" height=\"270\" width=\"270\" />\r\n                    <h3>Unranked</h3>\r\n                    <h4>0 LP</h4>\r\n                </div>\r\n                <div className=\"rank-stats\">\r\n                    <h5>Wins: 0</h5>\r\n                    <h5>Losses: 0{leagueLosses}</h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    return <div>{dataDisplay}</div>;\r\n}\r\n","// -> Results -> Matches.js -> Search.js -> Player.js -> App.js\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function Icon({champId, api}) {\r\n    const [data, setData] = useState([])\r\n    useEffect(() => {\r\n        let cancel\r\n        const proxy = 'https://cors-anywhere.herokuapp.com/'; //proxy incase local server does not work\r\n        axios.get(`${proxy}http://ddragon.leagueoflegends.com/cdn/9.19.1/data/en_US/champion.json`, \r\n        {cancelToken: new axios.CancelToken(c =>{\r\n            cancel = c\r\n        })}) //get data from league api\r\n        .then((res) => {\r\n            setData(res.data.data)\r\n            // console.log(res)\r\n        })\r\n        .catch((e) =>{\r\n            console.log(e.response)\r\n        })\r\n        return () => cancel\r\n    }, [])\r\n    const dataArray = Object.values(data)\r\n    const champImage = dataArray.map((champ, id) => {\r\n        if(Number(champ.key) === champId){\r\n            return(\r\n                <div className=\"champ-icon\" key={id}>\r\n                    <img src={`http://ddragon.leagueoflegends.com/cdn/9.19.1/img/champion/${champ.id}.png?api_key=${api}`} alt={`${champ.name}-icon`}\r\n                    width=\"80\" height=\"80\"/>\r\n                    <h6>{champ.name}</h6>\r\n                </div>\r\n            )\r\n        }else{\r\n            return null\r\n        }\r\n    })\r\n    return(\r\n        <div>\r\n            {champImage}\r\n        </div>\r\n    )\r\n}","// -> Matches.js -> Search.js -> Player.js -> App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Icon from \"./Icon.js\";\r\n\r\nexport default function Results({ matchIds, champ, api, sumName }) {\r\n    const [match, setMatch] = useState([]);\r\n    const [temp, setTemp] = useState([]);\r\n    const [main, setMain] = useState([]);\r\n    const [name, setName] = useState([]);\r\n    useEffect(() => {\r\n        //API fetching using axios\r\n        let cancel;\r\n        const proxy = \"http://cors.now.sh/ \"; //proxy incase local server does not work\r\n        if (matchIds !== null && matchIds !== undefined) {\r\n            //only get when id is declared with match values\r\n            matchIds.forEach((id) => {\r\n                //loop through all exisitng ids from matchIds\r\n                axios\r\n                    .get(\r\n                        `${proxy}https://na1.api.riotgames.com/lol/match/v4/matches/${id}?api_key=${api}`,\r\n                        {\r\n                            cancelToken: new axios.CancelToken((c) => {\r\n                                cancel = c;\r\n                            }),\r\n                        }\r\n                    )\r\n                    .then((res) => {\r\n                        setMatch([res]);\r\n                    })\r\n                    .catch((e) => {\r\n                        console.log(e);\r\n                    });\r\n            });\r\n            return () => cancel;\r\n        }\r\n    }, [matchIds, sumName]);\r\n\r\n    useEffect(() => {\r\n        setTemp([...main, match]);\r\n        return () => setMain([]);\r\n    }, [match]);\r\n\r\n    useEffect(() => {\r\n        setMain([...temp, match]);\r\n        return () => setTemp([]);\r\n    }, [match]);\r\n\r\n    useEffect(() => {\r\n        let cancel;\r\n        const proxy = \"https://cors-anywhere.herokuapp.com/\"; //proxy incase local server does not work\r\n        axios\r\n            .get(\r\n                `${proxy}http://ddragon.leagueoflegends.com/cdn/9.19.1/data/en_US/champion.json`,\r\n                {\r\n                    cancelToken: new axios.CancelToken((c) => {\r\n                        cancel = c;\r\n                    }),\r\n                }\r\n            ) //get data from league api\r\n            .then((res) => {\r\n                setName(res.data.data);\r\n                // console.log(res)\r\n            })\r\n            .catch((e) => {\r\n                console.log(e.response);\r\n            });\r\n        return () => cancel;\r\n    }, []);\r\n\r\n    const mainArray = Object.values(main);\r\n    console.log((mainArray.length - 1) % 10 === 0);\r\n    /* MAPPING THROUGH MATCHES */\r\n    const matchList =\r\n        (mainArray.length - 1) % 10 === 0 ? (\r\n            mainArray.slice(1, 11).map((game, id) => {\r\n                //loop through each object and output\r\n                const data = game[0] && game[0].data; // access to game[0].data decrease repitiveness in code\r\n                const mode = data && game[0].data.gameMode; // GAME MODE\r\n                const duration = data && game[0].data.gameDuration; //unformated duration of game\r\n                const minutes = Math.floor(duration / 60);\r\n                const seconds =\r\n                    duration % 60 >= 10 ? duration % 60 : `0${duration % 60}`;\r\n                const time = `${minutes} : ${seconds}`;\r\n\r\n                const player = data && game[0].data.participants; //get individual player data\r\n                const matchPlayer = data && game[0].data.participantIdentities;\r\n\r\n                const getId = matchPlayer\r\n                    .map((summoner) => {\r\n                        const matchName =\r\n                            summoner.player && summoner.player.summonerName;\r\n                        if (matchName === sumName) {\r\n                            return summoner.participantId;\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })\r\n                    .filter((player) => {\r\n                        return player !== undefined;\r\n                    });\r\n\r\n                /* Creating match statistics */\r\n                const champId =\r\n                    player &&\r\n                    game[0].data.participants[getId[0] - 1].championId; //champion Id\r\n                const statsAccess =\r\n                    player && game[0].data.participants[getId[0] - 1].stats; //get stats\r\n                const deaths = statsAccess.deaths;\r\n                const assists = statsAccess.assists;\r\n                const kills = statsAccess.kills;\r\n                const stats = `${kills}/${deaths}/${assists}`;\r\n\r\n                const outcomeColor = statsAccess.win\r\n                    ? \"green-text\"\r\n                    : \"red-text\";\r\n                const outcome = statsAccess.win ? \"VICTORY\" : \"DEFEAT\";\r\n\r\n                /* Converting champ id to string name */\r\n                const nameArray = Object.values(name);\r\n                const champName = nameArray\r\n                    .map((champ) => {\r\n                        //CURRENT CHAMPION SELECT\r\n                        if (Number(champ.key) === champId) {\r\n                            return champ.name;\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    })\r\n                    .filter((champ) => {\r\n                        return champ !== undefined;\r\n                    });\r\n\r\n                const re = new RegExp(champ, \"i\");\r\n                const nameMatch = String(champName).match(re)\r\n                    ? \"true\"\r\n                    : \"false\";\r\n\r\n                return (\r\n                    <div className={`match-post ${nameMatch}`} key={id}>\r\n                        <Icon champId={champId} api={api} />\r\n                        <div>\r\n                            <h4 className={outcomeColor}>{outcome}</h4>\r\n                            <h4 className={outcomeColor}>{stats}</h4>\r\n                        </div>\r\n                        <div className=\"match-body\">\r\n                            <h4>{mode}</h4>\r\n                            <h5>{time}</h5>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        ) : (\r\n            <div className=\"error\">None</div>\r\n        );\r\n    return <div className=\"match-list\">{matchList}</div>;\r\n}\r\n","// -> Search.js -> Player.js -> App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Results from \"./Results.js\";\r\n\r\nexport default function Matches({ accId, api, sumName }) {\r\n    const [data, setData] = useState([]);\r\n    const [champ, setChamp] = useState([]);\r\n    useEffect(() => {\r\n        const proxy = \"https://cors-anywhere.herokuapp.com/\"; //proxy incase local server does not work\r\n        axios\r\n            .get(\r\n                `${proxy}https://na1.api.riotgames.com/lol/match/v4/matchlists/by-account/${accId}?api_key=${api}`\r\n            )\r\n            .then((res) => {\r\n                setData(res);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e.response);\r\n            });\r\n    }, [accId, sumName, api]);\r\n    const dataArray = Object.values(data); // Object ->  Array\r\n    const matchArray = dataArray[0] && dataArray[0].matches;\r\n    const matchIds = matchArray\r\n        ? matchArray.slice(0, 10).map((match) => {\r\n              return match.gameId;\r\n          })\r\n        : null;\r\n    return (\r\n        <div className=\"match-container\">\r\n            <form\r\n                action=\"\"\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <input\r\n                    spellCheck=\"false\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Champion Name\"\r\n                    onChange={(e) => setChamp(e.target.value)}\r\n                />\r\n            </form>\r\n            <Results\r\n                matchIds={matchIds}\r\n                api={api}\r\n                champ={champ}\r\n                sumName={sumName}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","// -> Player.js -> App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../css/search.scss\";\r\nimport Info from \"./Info\";\r\nimport Matches from \"./Matches\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nexport default function Search({ search }) {\r\n    //get search ID from prop\r\n    const [summoner, setSummoner] = useState([]); // get player database\r\n    const proxy = \"https://cors-anywhere.herokuapp.com/\"; //proxy incase local server does not work\r\n    const apiKey = process.env.REACT_APP_LEAGUE_API; // API key acquired from riot games dev site\r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                `${proxy}https://na1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${search}?api_key=${apiKey}`\r\n            )\r\n            .then((res) => {\r\n                //get results from RIOT API according to the summoner name submitted\r\n                setSummoner(res);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e.err);\r\n            });\r\n    }, [search]);\r\n    const sumArray = Object.values(summoner); //turn summoner into an array\r\n    const sumName = sumArray[0] && sumArray[0].name; // returns NAME property from API\r\n    const sumLevel = sumArray[0] && sumArray[0].summonerLevel; // LEVEL\r\n    const sumIcon = sumArray[0] && sumArray[0].profileIconId; // ICON\r\n\r\n    const sumId = sumArray[0] && sumArray[0].id; // encrypted summoner id\r\n    const accId = sumArray[0] && sumArray[0].accountId; //encrypted account id\r\n    const profileDisplay = sumName ? (\r\n        <div className=\"result-container\">\r\n            <div className=\"profile-head\">\r\n                <img\r\n                    src={`http://ddragon.leagueoflegends.com/cdn/9.19.1/img/profileicon/${sumIcon}.png?api_key=${apiKey}`}\r\n                    height=\"150\"\r\n                    width=\"150\"\r\n                    alt=\"player-icon\"\r\n                />\r\n                <div className=\"player-name\">\r\n                    <h1>{sumName}</h1>\r\n                    <h4>Level {sumLevel}</h4>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-body\">\r\n                <Info sumId={sumId} api={apiKey} />\r\n            </div>\r\n            <Matches accId={accId} api={apiKey} sumName={sumName} />\r\n        </div>\r\n    ) : (\r\n        <div className=\"error\">\r\n            <h5>No results</h5>\r\n        </div>\r\n    );\r\n    return <div>{profileDisplay}</div>;\r\n}\r\n","// -> App.js    \r\nimport React, {useState, useRef} from 'react'\r\nimport Search from './Search'\r\n\r\nexport default function Players() {\r\n    const inputRef = useRef()\r\n    const [search, setSearch] = useState([]);\r\n    return(\r\n        <div className=\"container home\">\r\n            <h6 className=\"center\">Enter Summoner ID to search</h6>\r\n            <div className=\"form-search\">\r\n                <form action=\"\" onSubmit={e => {\r\n                    e.preventDefault()\r\n                    setSearch(inputRef.current.value)}} >\r\n                    <input className=\"center\" spellCheck=\"false\" type=\"text\" ref={inputRef}/>\r\n                </form>\r\n            </div>\r\n            <Search search={search}/>\r\n        </div>\r\n    )\r\n}","// -> Champion.js -> App.js\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport '../../css/post.scss'\r\n\r\nexport default function Post({match}) {\r\n    const [info, setInfo] = useState([])\r\n    useEffect(() => {\r\n        const proxy = 'https://cors-anywhere.herokuapp.com/'; //proxy incase local server does not work\r\n        axios.get(`${proxy}http://ddragon.leagueoflegends.com/cdn/9.19.1/data/en_US/champion/${match.params.post_id}.json `) //get data from league api\r\n            .then(res => {\r\n                setInfo(res.data.data) //retrieve data from api\r\n            })\r\n    }, [match])\r\n    const [skin, setSkin] = useState(0)\r\n    const [select, setSelect] = useState(false)\r\n    const [classList, setClassList] = useState(\"skin-screen\")\r\n    useEffect(() => { // selecting champion skins\r\n        if(select)\r\n            setClassList(\"skin-screen open\")\r\n        else\r\n            setClassList(\"skin-screen\")\r\n    }, [select])\r\n    const infoArray = Object.values(info)\r\n    const infoList = infoArray ? (infoArray.map((champ) => {\r\n        return(\r\n            <div className=\"main-display\" key={champ.key}>\r\n                <div className={classList}>\r\n                    <div className=\"skin-select\">\r\n                        {champ.skins.map((skin, key) => {\r\n                            return(\r\n                                <img key={key} onClick={() => {setSkin(skin.num); setSelect(false)}} src={`http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_${skin.num}.jpg`} alt=\"splash-art\" />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-image\">\r\n                    <h2 className=\"champ-name\">{champ.name}</h2>\r\n                    <div className=\"change-skin\"><button onClick={() => setSelect(true)} >Change Skin</button></div> {/*BUTTON TO SWITCH SKINS*/}\r\n                    <img src={`http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_${skin}.jpg`} alt=\"splash-art\" />\r\n                </div>\r\n                <div className=\"main-info\">\r\n                    <div className=\"skill-set\">\r\n                        {champ.spells.map((spell) => {\r\n                            return(\r\n                                <div className=\"spell-info\" key={champ.key}>\r\n                                    <img src={`http://ddragon.leagueoflegends.com/cdn/9.19.1/img/spell/${spell.id}.png`} alt={spell.id}/>\r\n                                    <div className=\"spell-text\">\r\n                                        <h5>{spell.name}</h5>\r\n                                        <div className=\"spell-body\">\r\n                                            <div className=\"cd-text\">\r\n                                                <span>Cooldown:</span>\r\n                                                <p>{spell.cooldown.map((cd) => { //map through spell cooldowns\r\n                                                    return(\r\n                                                        ` [${cd}]`\r\n                                                    )\r\n                                                    })}</p>\r\n                                            </div>\r\n                                            <div className=\"cost-text\">\r\n                                                <span>{spell.costType}:</span>\r\n                                                <p>{spell.cost.map((cost) => { //map through spell cast costs\r\n                                                    return(\r\n                                                        ` [${cost}]`\r\n                                                    )\r\n                                                    })}</p>         \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })) : (\r\n        <div className=\"center no-result\">API is not found.</div>\r\n    )\r\n    const checkEmpty = (value) => {\r\n        return value === undefined\r\n    }\r\n    if(infoList.every(checkEmpty)){\r\n        return(\r\n            <div className=\"center no-results\">Loading . . .</div>\r\n        )\r\n    }\r\n    return(\r\n        <div>\r\n            {infoList}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport \"./css/style.scss\";\nimport NavBar from \"./components/NavBar\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Champions from \"./components/Champions/Champions\";\nimport About from \"./components/About/About\";\nimport Players from \"./components/Players/Players\";\nimport Post from \"./components/Champions/Post\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <NavBar />\n                <Switch>\n                    <Route exact path=\"/champions\" component={Champions} />\n                    <Route path=\"/players\" component={Players} />\n                    <Route path=\"/\" component={About} />\n                    <Route path=\"/:post_id\" component={Post} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}